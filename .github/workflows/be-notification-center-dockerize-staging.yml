name: (Staging) Dockerizing SubsBase Notification Center Backend

on:
  workflow_dispatch:
  push:
    branches: [ staging ]
    paths:
      - backend/**

jobs:
  setup:
    runs-on: ubuntu-20.04
    name: Setup
    outputs:
      short-sha: ${{steps.short-sha.outputs.short-sha}}
      container-name: ${{steps.container-name.outputs.container-name}}
      image-name: ${{steps.image-name.outputs.image-name}}
      deployment-name: ${{steps.deployment-name.outputs.deployment-name}}
      tag: ${{steps.tag.outputs.tag}}
    steps:
      - id: container-name
        run: echo "::set-output name=container-name::notification-center-api"
      - id: short-sha
        run: echo "::set-output name=short-sha::$(echo '${{ github.sha }}' | cut -c 1-7)"
      - id: image-name
        run: echo "::set-output name=image-name::subsbase.azurecr.io/${{ steps.container-name.outputs.container-name }}:${{ steps.short-sha.outputs.short-sha }}"
      - id: deployment-name
        run: echo "::set-output name=deployment-name::fe-${{ steps.container-name.outputs.container-name }}-deployment"
      - id: tag
        run: echo "::set-output name=tag::staging/${{ steps.deployment-name.outputs.deployment-name }}"

  build_and_push_image:
    runs-on: ubuntu-latest
    name: Build and Push Image
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Azure Container Registry
        uses: docker/login-action@v1
        with:
          registry: subsbase.azurecr.io
          username: ${{ secrets.AZ_SP_U }}
          password: ${{ secrets.AZ_SP_P }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ needs.setup.outputs.image-name }}

      - name: Deploy to cluster
        uses: steebchen/kubectl@v2.0.0
        with:
          command: set image --record deployment/${{ needs.setup.outputs.deployment-name }} ${{ needs.setup.outputs.container-name }}=${{ needs.setup.outputs.image-name }}
          config: ${{ secrets.STAGING_AKS_KUBE_CONFIG }}
          version: v1.19.7

      - name: Await Deployment
        uses: steebchen/kubectl@v2.0.0
        with:
          command: rollout status deployment/${{ needs.setup.outputs.deployment-name }}
          config: ${{ secrets.STAGING_AKS_KUBE_CONFIG }}
          version: v1.19.7

      - name: Tag Commit
        run: |
          git push origin --delete ${{ needs.setup.outputs.tag }} || echo "new tag";
          git tag ${{ needs.setup.outputs.tag }} &&
          git push origin ${{ needs.setup.outputs.tag }}
